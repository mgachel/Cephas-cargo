# Generated by Django 5.1.1 on 2025-09-27 06:17

from django.db import migrations
from django.db.models import Sum


def update_air_container_weights(apps, schema_editor):
    """Update existing air containers to have their weight calculated from cargo items."""
    CargoContainer = apps.get_model('cargo', 'CargoContainer')
    CargoItem = apps.get_model('cargo', 'CargoItem')
    
    air_containers = CargoContainer.objects.filter(cargo_type='air')
    
    for container in air_containers:
        # Calculate total weight from cargo items
        total_weight = CargoItem.objects.filter(
            container=container,
            weight__isnull=False
        ).aggregate(total_weight=Sum('weight'))['total_weight'] or 0
        
        # Update container weight
        container.weight = total_weight
        container.save(update_fields=['weight'])


def reverse_update_air_container_weights(apps, schema_editor):
    """Reverse migration - reset air container weights to null."""
    CargoContainer = apps.get_model('cargo', 'CargoContainer')
    
    CargoContainer.objects.filter(cargo_type='air').update(weight=None)


class Migration(migrations.Migration):

    dependencies = [
        ('cargo', '0005_fix_cargoitem_constraints'),
    ]

    operations = [
        migrations.RunPython(update_air_container_weights, reverse_update_air_container_weights),
    ]
