# Generated by Django 5.2.3 on 2025-10-08 15:02

from django.conf import settings
from django.db import migrations, models


def remove_duplicate_container_clients(apps, schema_editor):
    """
    Remove duplicate CargoItem entries with the same container and client.
    Keep the most recent one (latest created_at).
    """
    CargoItem = apps.get_model('cargo', 'CargoItem')
    
    # Force close any open transaction to avoid pending trigger events
    from django.db import connection
    connection.close()
    connection.ensure_connection()
    
    # Get all container-client combinations
    from django.db.models import Count
    duplicates = CargoItem.objects.values('container', 'client').annotate(
        count=Count('id')
    ).filter(count__gt=1)
    
    deleted_count = 0
    for dup in duplicates:
        # Get all items with this container-client combo
        items = CargoItem.objects.filter(
            container_id=dup['container'],
            client_id=dup['client']
        ).order_by('-created_at')
        
        # Keep the first (most recent), delete the rest
        items_to_delete = list(items[1:])
        count = len(items_to_delete)
        for item in items_to_delete:
            item.delete()
        
        deleted_count += count
    
    if deleted_count > 0:
        print(f"Removed {deleted_count} duplicate CargoItem entries")
    
    # Commit the transaction explicitly
    from django.db import transaction
    transaction.commit()


class Migration(migrations.Migration):

    dependencies = [
        ('cargo', '0011_alter_clientshipmentsummary_client_shipping_mark'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        # First, remove duplicates with atomic=False to avoid pending trigger events
        migrations.RunPython(
            remove_duplicate_container_clients, 
            migrations.RunPython.noop,
            atomic=False  # This is the key - run outside of transaction
        ),
        # Then proceed with constraint changes
        migrations.RemoveConstraint(
            model_name='cargoitem',
            name='unique_container_client_tracking',
        ),
        migrations.AlterField(
            model_name='cargoitem',
            name='tracking_id',
            field=models.CharField(max_length=100),
        ),
        migrations.AddConstraint(
            model_name='cargoitem',
            constraint=models.UniqueConstraint(fields=('container', 'client'), name='unique_container_client'),
        ),
    ]
