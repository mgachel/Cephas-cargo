"""
Django settings for primepre project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


from decouple import config
from corsheaders.defaults import default_headers, default_methods


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', default='django-insecure-fdwfgv_359rpn$jj7=j24rtc=#3f)-0f7e=1r1fsz$v@#%h@ha')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)


ALLOWED_HOSTS = [h.strip() for h in config(
    "ALLOWED_HOSTS",
    default="primepre-logistics-backend-fb2561752d16.herokuapp.com,primepre-logistics-backend.herokuapp.com,localhost,127.0.0.1" # Add the short name here
).split(",") if h.strip()]


# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # Custom apps
    'users',
    'cargo',
    'GoodsRecieved',
    'rates',  
    'notes',
    'analytics',
    'claims',  # Add claims app
    
    # Third party apps
    'rest_framework',
    'rest_framework_simplejwt',
    'rest_framework.authtoken',
    'django_filters',
    'corsheaders',  # Add CORS support
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware', 
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware', 
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'primepre.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'primepre.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

import dj_database_url

DATABASES = {
    'default': dj_database_url.config(
        default=config('DATABASE_URL', default='sqlite:///db.sqlite3'),
        conn_max_age=600,
        ssl_require=False
    )
}



# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'



# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom user model
AUTH_USER_MODEL = 'users.CustomerUser'

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
DEFAULT_FROM_EMAIL = 'Primepre <no-reply@primepre.com>'


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20
}

# JWT settings
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=15),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': True,
    
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,
    
    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
}

def csv_env(name: str, default: str):
    return [x.strip() for x in os.getenv(name, default).split(",") if x.strip()]

# CORS settings for frontend
# IMPORTANT: Previously this was defined as a single string in parentheses which
# meant CORS matching failed and no Access-Control-Allow-Origin header was sent.
# We now parse from env or fall back to a proper list.
def csv_list(value: str):
    return [v.strip() for v in value.split(',') if v.strip()]

"""CORS configuration

Strategy:
1. Default to allowing all origins temporarily to immediately resolve production login blockage.
2. If you set CORS_ALLOW_ALL_ORIGINS=False in env, we fall back to an explicit allow-list from CORS_ALLOWED_ORIGINS.
3. Headers & methods extend library defaults for forward compatibility.
4. Long preflight cache to cut latency.
"""

_allow_all = config('CORS_ALLOW_ALL_ORIGINS', default='true').lower() in ('1','true','yes','on')
CORS_ALLOW_ALL_ORIGINS = _allow_all

# Explicit list (used only if CORS_ALLOW_ALL_ORIGINS is False)
CORS_ALLOWED_ORIGINS = csv_list(
    config(
        'CORS_ALLOWED_ORIGINS',
        default='https://primepre-frontend-ba6f55cc48e5.herokuapp.com'
    )
)

# Allow credentials (Authorization header) â€“ safe because either all origins (temporary) or explicit list.
CORS_ALLOW_CREDENTIALS = True

# Merge defaults with any custom headers
EXTRA_CORS_HEADERS = [
    'x-csrftoken',
    'x-requested-with',
    'authorization',  # ensure explicit
]
CORS_ALLOW_HEADERS = list(dict.fromkeys([h.lower() for h in (list(default_headers) + EXTRA_CORS_HEADERS)]))

# Use default methods (GET, POST, etc.) ensuring OPTIONS present
CORS_ALLOW_METHODS = list(dict.fromkeys(list(default_methods)))

# Cache preflight for 24h
CORS_PREFLIGHT_MAX_AGE = 86400

# Optional: allow private network requests (Chrome feature); harmless if ignored by older versions
try:
    CORS_ALLOW_PRIVATE_NETWORK = True  # noqa
except Exception:
    pass

CSRF_TRUSTED_ORIGINS = csv_env(
    "CSRF_TRUSTED_ORIGINS",
    "https://primepre-frontend-ba6f55cc48e5.herokuapp.com,https://*.herokuapp.com"
)

SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SAMESITE = "None"
CSRF_COOKIE_SAMESITE = "None"

# Custom user model
AUTH_USER_MODEL = 'users.CustomerUser'