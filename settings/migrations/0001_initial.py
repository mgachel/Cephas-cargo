# Generated by Django 5.1.1 on 2025-09-16 00:07

import django.core.validators
import django.db.models.deletion
import os
from django.conf import settings
from django.core.exceptions import ValidationError
from django.db import migrations, models


def validate_image_file(value):
    """Validate image file extensions"""
    ext = os.path.splitext(value.name)[1].lower()
    valid_extensions = ['.jpg', '.jpeg', '.png', '.gif', '.svg']
    if ext not in valid_extensions:
        raise ValidationError(f'Unsupported file extension. Allowed: {", ".join(valid_extensions)}')


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminGeneralSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('role', models.CharField(blank=True, max_length=50)),
                ('department', models.CharField(blank=True, max_length=100)),
                ('account_status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive')], default='ACTIVE', max_length=20)),
                ('profile_image', models.ImageField(blank=True, help_text='Admin profile picture', null=True, upload_to='admin_profiles/', validators=[validate_image_file])),
                ('bio', models.TextField(blank=True, help_text='Admin bio/description')),
                ('last_login_display', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin_user', models.OneToOneField(help_text='Admin user this profile belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='general_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Admin General Settings',
                'verbose_name_plural': 'Admin General Settings',
            },
        ),
        migrations.CreateModel(
            name='CompanyOffice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('office_image', models.ImageField(blank=True, help_text='Office image (drag & drop)', null=True, upload_to='office_images/', validators=[validate_image_file])),
                ('office_name', models.CharField(max_length=200, unique=True)),
                ('phone_number', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=100)),
                ('physical_address', models.TextField(help_text='Physical address of the office')),
                ('digital_address', models.CharField(blank=True, help_text='Digital address (GPS/postal code)', max_length=100)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, help_text='Latitude coordinate (optional)', max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, help_text='Longitude coordinate (optional)', max_digits=11, null=True)),
                ('map_link', models.URLField(blank=True, help_text='Google Maps or other map service link (optional)')),
                ('is_active', models.BooleanField(default=True)),
                ('is_headquarters', models.BooleanField(default=False)),
                ('operating_hours', models.CharField(default='8:00 AM - 6:00 PM', help_text='Office operating hours', max_length=100)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Company Office',
                'verbose_name_plural': 'Company Offices',
                'ordering': ['office_name'],
            },
        ),
        migrations.CreateModel(
            name='CompanySettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(default='Prime Pre Logistics Ltd', max_length=200)),
                ('company_email', models.EmailField(default='info@primepre.com', max_length=254)),
                ('company_phone', models.CharField(default='+233 123 456 789', max_length=20)),
                ('company_address', models.TextField(default='Accra, Ghana')),
                ('company_website', models.URLField(blank=True, null=True)),
                ('default_currency', models.CharField(default='USD', max_length=3)),
                ('fiscal_year_start_month', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('business_hours_start', models.TimeField(default='08:00')),
                ('business_hours_end', models.TimeField(default='18:00')),
                ('business_days', models.JSONField(default=list, help_text='List of business days (0=Monday, 6=Sunday)')),
                ('shipping_mark_prefix', models.CharField(default='PM', max_length=10)),
                ('auto_generate_shipping_marks', models.BooleanField(default=True)),
                ('shipping_mark_format', models.CharField(default='{prefix}{first_name}{counter:02d}', help_text='Format: {prefix}, {first_name}, {last_name}, {counter}', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('default_client_assignment', models.ForeignKey(blank=True, help_text='Default client for unassigned packages', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='default_assignments', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Company Settings',
                'verbose_name_plural': 'Company Settings',
            },
        ),
        migrations.CreateModel(
            name='DefaultSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_sea_rate', models.DecimalField(decimal_places=2, default=50.0, max_digits=10)),
                ('default_air_rate', models.DecimalField(decimal_places=2, default=150.0, max_digits=10)),
                ('default_cargo_status', models.CharField(default='IN_TRANSIT', max_length=20)),
                ('default_goods_status_china', models.CharField(default='READY_FOR_SHIPPING', max_length=30)),
                ('default_goods_status_ghana', models.CharField(default='READY_FOR_DELIVERY', max_length=30)),
                ('default_pagination_size', models.IntegerField(default=20, validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(100)])),
                ('default_timezone', models.CharField(default='UTC', max_length=50)),
                ('default_language', models.CharField(default='en', max_length=10)),
                ('cache_duration_hours', models.IntegerField(default=6, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(168)])),
                ('enable_caching', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Default Settings',
                'verbose_name_plural': 'Default Settings',
            },
        ),
        migrations.CreateModel(
            name='InvoiceMetaSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_logo', models.ImageField(blank=True, help_text='Company logo for invoices (drag & drop)', null=True, upload_to='invoice_assets/', validators=[validate_image_file])),
                ('theme_color', models.CharField(default='#1F2937', help_text='Theme color for invoices (hex format: #RRGGBB)', max_length=7)),
                ('secondary_color', models.CharField(default='#6B7280', help_text='Secondary color for invoices', max_length=7)),
                ('invoice_notes', models.TextField(default='Thank you for your business!', help_text='Default notes to appear on invoices')),
                ('invoice_number_format', models.CharField(default='INV-{year}-{month:02d}-{counter:04d}', help_text='Format: {year}, {month}, {day}, {counter}', max_length=50)),
                ('invoice_counter', models.IntegerField(default=1, help_text='Current invoice counter')),
                ('selected_template', models.CharField(choices=[('CLASSIC', 'Classic Template'), ('MODERN', 'Modern Template'), ('MINIMAL', 'Minimal Template'), ('CORPORATE', 'Corporate Template')], default='CLASSIC', max_length=20)),
                ('show_company_address', models.BooleanField(default=True)),
                ('show_payment_terms', models.BooleanField(default=True)),
                ('show_due_date', models.BooleanField(default=True)),
                ('invoice_footer_text', models.TextField(blank=True, help_text='Footer text for invoices')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Invoice Meta Settings',
                'verbose_name_plural': 'Invoice Meta Settings',
            },
        ),
        migrations.CreateModel(
            name='NotificationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_notifications_enabled', models.BooleanField(default=True)),
                ('email_host', models.CharField(default='smtp.gmail.com', max_length=100)),
                ('email_port', models.IntegerField(default=587)),
                ('email_use_tls', models.BooleanField(default=True)),
                ('email_from_address', models.EmailField(default='no-reply@primepre.com', max_length=254)),
                ('sms_notifications_enabled', models.BooleanField(default=False)),
                ('twilio_account_sid', models.CharField(blank=True, max_length=100)),
                ('twilio_auth_token', models.CharField(blank=True, max_length=100)),
                ('twilio_phone_number', models.CharField(blank=True, max_length=20)),
                ('sms_console_mode', models.BooleanField(default=True, help_text='Use console output for SMS in development')),
                ('whatsapp_notifications_enabled', models.BooleanField(default=False)),
                ('whatsapp_api_key', models.CharField(blank=True, max_length=200)),
                ('whatsapp_business_number', models.CharField(blank=True, max_length=20)),
                ('welcome_email_template', models.TextField(default='Welcome to Prime Pre Logistics! Your account has been created.')),
                ('shipment_arrival_template', models.TextField(default='Your shipment {tracking_id} has arrived at {location}.')),
                ('delivery_ready_template', models.TextField(default='Your shipment {tracking_id} is ready for delivery.')),
                ('admin_alert_email', models.EmailField(default='admin@primepre.com', max_length=254)),
                ('system_error_notifications', models.BooleanField(default=True)),
                ('low_capacity_threshold', models.IntegerField(default=90, help_text='Warehouse capacity percentage to trigger alerts', validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(99)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Settings',
                'verbose_name_plural': 'Notification Settings',
            },
        ),
        migrations.CreateModel(
            name='OfficeSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('office_name', models.CharField(max_length=100, unique=True)),
                ('office_code', models.CharField(max_length=10, unique=True)),
                ('office_type', models.CharField(choices=[('HEAD_OFFICE', 'Head Office'), ('BRANCH', 'Branch Office'), ('WAREHOUSE', 'Warehouse'), ('COLLECTION_POINT', 'Collection Point')], default='BRANCH', max_length=20)),
                ('country', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('is_active', models.BooleanField(default=True)),
                ('accepts_shipments', models.BooleanField(default=True)),
                ('accepts_collections', models.BooleanField(default=True)),
                ('working_hours_start', models.TimeField(default='08:00')),
                ('working_hours_end', models.TimeField(default='17:00')),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('max_capacity_cbm', models.DecimalField(decimal_places=2, default=1000.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('current_capacity_cbm', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Office Settings',
                'verbose_name_plural': 'Office Settings',
                'ordering': ['office_name'],
            },
        ),
        migrations.CreateModel(
            name='ShippingMarkFormatSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_prefix', models.CharField(default='PM', help_text='Base prefix for all shipping marks', max_length=10)),
                ('default_format_template', models.CharField(default='PM{name}', help_text='Default format when no rules match', max_length=100)),
                ('auto_generate_enabled', models.BooleanField(default=True, help_text='Enable automatic shipping mark generation')),
                ('allow_duplicates', models.BooleanField(default=False, help_text='Allow duplicate shipping marks')),
                ('append_counter_on_duplicate', models.BooleanField(default=True, help_text='Append counter if duplicate found')),
                ('max_name_length', models.IntegerField(default=6, help_text='Maximum characters from client name', validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(15)])),
                ('use_nickname_if_available', models.BooleanField(default=True, help_text='Use nickname instead of first name if available')),
                ('min_shipping_mark_length', models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(3)])),
                ('max_shipping_mark_length', models.IntegerField(default=15, validators=[django.core.validators.MinValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Shipping Mark Format Settings',
                'verbose_name_plural': 'Shipping Mark Format Settings',
            },
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_name', models.CharField(default='Prime Pre Logistics', max_length=100)),
                ('app_version', models.CharField(default='1.0.0', max_length=20)),
                ('maintenance_mode', models.BooleanField(default=False)),
                ('maintenance_message', models.TextField(blank=True, null=True)),
                ('jwt_expiry_minutes', models.IntegerField(default=60, validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(1440)])),
                ('max_login_attempts', models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('password_reset_expiry_hours', models.IntegerField(default=24, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(168)])),
                ('api_rate_limit_per_minute', models.IntegerField(default=100, validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(1000)])),
                ('sms_rate_limit_per_hour', models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('max_file_size_mb', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('allowed_file_extensions', models.JSONField(default=list, help_text="List of allowed file extensions (e.g., ['.xlsx', '.pdf'])")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'System Settings',
                'verbose_name_plural': 'System Settings',
            },
        ),
        migrations.CreateModel(
            name='WarehouseAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Warehouse name', max_length=200, unique=True)),
                ('location', models.CharField(help_text='City, state or general location', max_length=200)),
                ('address', models.TextField(help_text='Full warehouse address')),
                ('description', models.TextField(help_text='Description of warehouse services')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Warehouse Address',
                'verbose_name_plural': 'Warehouse Addresses',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='WarehouseSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('warehouse_name', models.CharField(max_length=100, unique=True)),
                ('warehouse_code', models.CharField(max_length=10, unique=True)),
                ('warehouse_type', models.CharField(choices=[('CHINA', 'China Warehouse'), ('GHANA', 'Ghana Warehouse'), ('TRANSIT', 'Transit Warehouse')], max_length=20)),
                ('location', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('accepts_goods', models.BooleanField(default=True)),
                ('max_daily_intake', models.IntegerField(default=200, validators=[django.core.validators.MinValueValidator(1)])),
                ('processing_sla_days', models.IntegerField(default=14, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(90)])),
                ('max_capacity_cbm', models.DecimalField(decimal_places=2, default=10000.0, max_digits=12)),
                ('high_priority_threshold_value', models.DecimalField(decimal_places=2, default=25000.0, help_text='Goods value threshold for high priority processing', max_digits=12)),
                ('auto_flag_threshold_days', models.IntegerField(default=30, help_text='Days after which goods are auto-flagged for review', validators=[django.core.validators.MinValueValidator(1)])),
                ('max_cbm_per_item', models.DecimalField(decimal_places=3, default=1000.0, max_digits=8)),
                ('max_weight_per_item', models.DecimalField(decimal_places=2, default=50000.0, max_digits=10)),
                ('max_quantity_per_item', models.IntegerField(default=100000)),
                ('max_estimated_value', models.DecimalField(decimal_places=2, default=1000000.0, max_digits=12)),
                ('available_locations', models.JSONField(default=list, help_text='List of available storage locations')),
                ('auto_workflows_enabled', models.BooleanField(default=True)),
                ('batch_processing_enabled', models.BooleanField(default=True)),
                ('priority_processing_enabled', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warehouses', to='settings.officesettings')),
            ],
            options={
                'verbose_name': 'Warehouse Settings',
                'verbose_name_plural': 'Warehouse Settings',
                'ordering': ['warehouse_name'],
            },
        ),
        migrations.CreateModel(
            name='ShippingMarkFormattingRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Description of this rule')),
                ('country', models.CharField(help_text='Country for this rule', max_length=100)),
                ('region', models.CharField(help_text='Region within country', max_length=100)),
                ('prefix_value', models.CharField(help_text="Prefix value to add (e.g., '1', '2', 'GA', 'NR')", max_length=10)),
                ('format_template', models.CharField(default='PM{prefix}{name}', help_text='Format template: {prefix}, {name}, {counter}', max_length=100)),
                ('priority', models.IntegerField(default=1, help_text='Rule priority (lower number = higher priority)')),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Shipping Mark Formatting Rule',
                'verbose_name_plural': 'Shipping Mark Formatting Rules',
                'ordering': ['priority', 'country', 'region'],
                'unique_together': {('country', 'region', 'prefix_value')},
            },
        ),
    ]
